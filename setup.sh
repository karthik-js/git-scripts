#!/bin/bash

set -e

# Paths
GITCONFIG_MAIN="$HOME/.gitconfig"
GITCONFIG_INCLUDE="$HOME/.gitconfig.custom"
SCRIPTS_SRC_DIR="$(cd "$(dirname "$0")" && pwd)"
SCRIPTS_TARGET_DIR="$HOME/.git-scripts"

# Ensure scripts directory exists
mkdir -p "$SCRIPTS_TARGET_DIR"

# Copy scripts
cp "$SCRIPTS_SRC_DIR"/scripts/*.sh "$SCRIPTS_TARGET_DIR"
chmod +x "$SCRIPTS_TARGET_DIR"/*.sh

echo "Copied scripts to $SCRIPTS_TARGET_DIR"

# Copy gitconfig template to ~/.gitconfig.custom
{
  echo "# Generated by git-scripts setup on $(date)"
  cat "$SCRIPTS_SRC_DIR/gitconfig.template"
} > "$GITCONFIG_INCLUDE"

echo "Copied gitconfig template to $GITCONFIG_INCLUDE"

# Add include.path to .gitconfig if not already present
if ! grep -q "path = ~/.gitconfig.custom" "$GITCONFIG_MAIN" 2>/dev/null; then
  echo -e '\n[include]\n\tpath = ~/.gitconfig.custom' >> "$GITCONFIG_MAIN"
  echo "Added include.path to $GITCONFIG_MAIN"
else
  echo "include.path already present in $GITCONFIG_MAIN"
fi

# Register script-based aliases
alias_defs=(
  "bb=!$SCRIPTS_TARGET_DIR/better-branch-output.sh"
  "sf=!$SCRIPTS_TARGET_DIR/git-smart-fetch.sh"
  "clean-branches=!$SCRIPTS_TARGET_DIR/git-clean-branches.sh"
)

for alias_def in "${alias_defs[@]}"; do
  name=$(echo "$alias_def" | cut -d= -f1)
  git config --global alias."$name" "${alias_def#*=}"
  echo "Configured alias: $name"
  
  # Optionally show a message if alias was already present
  # previous_value=$(git config --global --get alias."$name" || echo "")
  # [ "$previous_value" != "${alias_def#*=}" ] && echo "Updated alias: $name"
done

echo "Git configuration setup complete."

